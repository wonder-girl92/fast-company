{"version":3,"sources":["app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/index.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","CheckBoxField","children","checked","LoginForm","email","password","stayOn","setData","setErrors","handleChange","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","useEffect","Object","keys","isValid","onSubmit","e","preventDefault","console","log","disabled","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","professions","completedMeetings","rate","bookmark","API","fetchAll","Promise","resolve","window","setTimeout","getById","find","user","SelectField","defaultOption","options","optionsArray","Array","isArray","map","optionName","option","RadioField","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","RegisterForm","sex","license","setQualities","setProfession","api","then","Login","useParams","formType","setFormType","toggleFormType","params","role","Main","Quality","Qualities","qual","UserPage","userId","history","useHistory","setUser","push","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","toString","slice","indexOf","renderPhrase","Bookmark","status","rest","TableHeader","selectedSort","onSort","columns","renderSortArrow","currentPath","path","order","column","undefined","scope","TableBody","renderContent","component","get","Table","UserTable","onToggleBookMark","onDelete","to","delete","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","setUsers","searchQuery","setSearchQuery","filteredUsers","filter","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","placeholder","pageIndex","Users","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c47fd17.chunk.js","sourcesContent":["export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n    switch (validateMethod) {\r\n    case \"isRequired\": {\r\n      if (typeof data === \"boolean\") {\r\n        statusValidate = !data;\r\n      } else {\r\n      statusValidate = data.trim() === \"\";\r\n    }\r\n      break;\r\n    }\r\n    case \"isEmail\": {\r\n      const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n      statusValidate = !emailRegExp.test(data);\r\n      break;\r\n    }\r\n    case \"isCapitalSymbol\": {\r\n      const capitalRegExp = /[A-Z]+/g;\r\n      statusValidate = !capitalRegExp.test(data);\r\n      break;\r\n    }\r\n    case \"isContainDigit\": {\r\n      const digitRegExp = /\\d+/g;\r\n      statusValidate = !digitRegExp.test(data);\r\n      break;\r\n    }\r\n    case \"min\": {\r\n      statusValidate = data.length < config.value;\r\n      break;\r\n    }\r\n    // default:\r\n    //   break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      );\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({\r\n  label,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n  }; // класс вывода ошибки\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}> {label} </label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          type={showPassword ? \"text\" : type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === \"password\" && (\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            onClick={toggleShowPassword}\r\n          >\r\n            <i\r\n              className={\"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")}> </i>\r\n          </button>\r\n        )}\r\n        {/* && - т.к.нет негативного отображения */}\r\n        {error && <div className=\"invalid-feedback\"> {error} </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: \"text\"\r\n}; // т.е.если тип не задан, то по умолчанию это текст.\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({\r\n  name,\r\n  value,\r\n  onChange,\r\n  children,\r\n  error\r\n}) => {\r\n  const handleChange = () => {\r\nonChange({ name: name, value: !value });\r\n  };\r\n  const getInputClasses = () => {\r\n    return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n  };\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label\r\n        className=\"form-check-label\"\r\n        htmlFor={name}\r\n      >\r\n        {children}\r\n      </label>\r\n      { error && <div\r\n      className=\"invalid-feedback\">\r\n        {error}\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\n\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    stayOn: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }));\r\n  };\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: \"Электронная почта обязательна для заполнения\"\r\n      },\r\n      isEmail: {\r\n        message: \"Email введен некорректно\"\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: {\r\n        message: \"Пароль обязателен для заполнения\"\r\n      },\r\n      isCapitalSymbol: {\r\n        message: `Пароль должен содержать хотя\r\n        бы одну заглавную букву`\r\n      },\r\n      isContainDigit: {\r\n        message: \"Пароль должен содержать хотя бы одно число\"\r\n      },\r\n      min: {\r\n        message: \"Пароль должен состоять минимум из 8 символов\",\r\n        value: 8\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n  // следим за вводом текста в поля до отправки формы\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n  // для добавления исключения при деактивации баттон\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n  return (\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Электронная почта\"\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              error={errors.email}\r\n            />\r\n            <TextField\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={data.password}\r\n              onChange={handleChange}\r\n              error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n              value={data.stayOn}\r\n              onChange={handleChange}\r\n              name=\"stayOn\"\r\n            >\r\n              Оставаться в системе\r\n            </CheckBoxField>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!isValid}\r\n              className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users);\n        }, 2000);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users.find((user) => user._id === id));\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\n\nconst API = {\n    users,\n    professions,\n    qualities\n};\nexport default API;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  defaultOption,\r\n  options,\r\n  name,\r\n  error\r\n}) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n   const getInputClasses = () => {\r\n    return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n  };\r\n  const optionsArray = !Array.isArray(options) &&\r\n  typeof options === \"object\"\r\n? Object.keys(options).map((optionName) => ({\r\n      name: options[optionName].name,\r\n      value: options[optionName]._id\r\n}))\r\n: options;\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n        htmlFor={name}\r\n        className=\"form-label\"\r\n      >\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option\r\n              value={option.value}\r\n              key={option.value}\r\n            >\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({\r\n  options,\r\n  name,\r\n  onChange,\r\n  value,\r\n  label\r\n}) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n       className=\"form-label\"\r\n      >\r\n        {label}\r\n      </label>\r\n      <div>\r\n      {options.map((option) => (\r\n        <div\r\n          key={option.name + \"_\" + option.value}\r\n          className=\"form-check form-check-inline\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name={name}\r\n            id={option.name + \"_\" + option.value}\r\n            checked={option.value === value}\r\n            value={option.value}\r\n            onChange={handleChange}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={option.name + \"_\" + option.value}>\r\n            {option.name}\r\n          </label>\r\n        </div>\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({\r\n  options,\r\n  onChange,\r\n  name,\r\n  label,\r\n  defaultValue\r\n}) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) &&\r\n  typeof options === \"object\"\r\n    ? Object.keys(options).map((optionName) => ({\r\n      label: options[optionName].name,\r\n      value: options[optionName]._id\r\n    }))\r\n    : options;\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n        className=\"form-label\"\r\n      >\r\n        {label}\r\n      </label>\r\n    <Select\r\n      isMulti\r\n      closeMenuOnSelect={false}\r\n      // чтоб вкладка автоматически не закрывалась после выбора\r\n      defaultValue={defaultValue}\r\n      options={optionsArray}\r\n      className=\"basic-multi-select\"\r\n      classNamePrefix=\"select\"\r\n      onChange={handleChange}\r\n      name={name}\r\n    />\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  onChange: PropTypes.func,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport api from \"../../api\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport MultiSelectField from \"../common/form/multiSelectField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\n\r\nconst RegisterForm = () => {\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    profession: \"\",\r\n    sex: \"male\",\r\n    qualities: [],\r\n    license: false\r\n  });\r\n\r\n  const [qualities, setQualities] = useState({});\r\n  const [professions, setProfession] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => setProfession(data));\r\n    api.qualities.fetchAll().then((data) => setQualities(data));\r\n  }, []);\r\n\r\n  const handleChange = (target) => {\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        [target.name]: target.value\r\n      }));\r\n  };\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: \"Электронная почта обязательна для заполнения\"\r\n      },\r\n      isEmail: {\r\n        message: \"Email введен некорректно\"\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: {\r\n        message: \"Пароль обязателен для заполнения\"\r\n      },\r\n      isCapitalSymbol: {\r\n        message: `Пароль должен содержать хотя \r\n        бы одну заглавную букву`\r\n      },\r\n      isContainDigit: {\r\n        message: \"Пароль должен содержать хотя бы одно число\"\r\n      },\r\n      min: {\r\n        message: \"Пароль должен состоять минимум из 8 символов\",\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: {\r\n        message: \"Обязательно выберите Вашу профессию\"\r\n      }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message:\r\n        \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n  // следим за вводом текста в поля до отправки формы\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n  // для добавления исключения при деактивации баттон\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        name=\"email\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите профессию\"\r\n        defaultOption=\"Choose...\"\r\n        name=\"profession\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n        value={data.profession}\r\n        error={errors.profession}\r\n      />\r\n      <RadioField\r\n        options={[{ name: \"Male\", value: \"male\" },\r\n          { name: \"Female\", value: \"female\" },\r\n          { name: \"Other\", value: \"other\" }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualities}\r\n        onChange={handleChange}\r\n        defaultValue={data.qualities}\r\n        name=\"qualities\"\r\n        label=\"Выберите качества\"\r\n      />\r\n      <CheckBoxField\r\n      value={data.license}\r\n      onChange={handleChange}\r\n      name=\"license\"\r\n      error={errors.license}\r\n      >\r\n        Подтвердить <a> лицензионное соглашение </a>\r\n      </CheckBoxField>\r\n      <button\r\n        type=\"submit\"\r\n        disabled={!isValid}\r\n        className=\"btn btn-primary w-100 mx-auto\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from \"react\";\r\nimport LoginForm from \"../components/ui/loginForm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RegisterForm from \"../components/ui/registerForm\";\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === \"register\" ? type : \"login\");\r\nconst toggleFormType = (params) => {\r\n  setFormType(prevState => prevState === \"register\" ? \"login\" : \"register\");\r\n};\r\n\r\nreturn (\r\n  <div className=\"container mt-5\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n        {formType === \"register\"\r\n? (\r\n            <>\r\n              <h3 className=\"mb-4\"> Register </h3>\r\n              <RegisterForm/>\r\n            <p> Already have account?{\" \"}\r\n              <a\r\n                role=\"button\"\r\n                onClick={toggleFormType}>\r\n                {\" \"}\r\n                Sign in\r\n              </a>\r\n            </p>\r\n          </>\r\n          )\r\n: (\r\n            <>\r\n              <h3 className=\"mb-4\"> Login </h3>\r\n              <LoginForm />\r\n            <p> {`Don't`} have account?{\" \"}\r\n              <a\r\n              role=\"button\"\r\n              onClick={toggleFormType}\r\n              >\r\n                {\" \"}\r\n                Sign up </a>\r\n            </p>\r\n        </>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n      );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <h1> Main Page </h1>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Quality({ color, name, _id }) {\n  return (\n    <span className={`badge m-1 bg-${color}`} key={_id}>\n      {name}\n    </span>\n  );\n}\n\nQuality.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\r\nexport default Qualities;\r\n","import React from \"react\";\r\nimport Quality from \"./quality\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  return <>\r\n    {qualities.map((qual) => (\r\n      <Quality key={qual._id} {...qual} />\r\n    ))}\r\n  </>;\r\n};\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../../api\";\r\nimport Qualities from \"../../ui/qualities/\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    api.users.getById(userId).then((data) => setUser(data), []);\r\n  });\r\n  // ставим пустой массив как зависимость, чтоб юзеры\r\n  // запрашивались 1 раз при загрузке страницы, а не\r\n  // каждый раз при изменении страницы\r\n  const handleClick = () => {\r\n    history.push(\"/users\");\r\n  };\r\n\r\n  if (user) {\r\n    return <div>\r\n      <h1> {user.name} </h1>\r\n      <h2> Профессия: {user.profession.name} </h2>\r\n      <Qualities qualities={user.qualities} />\r\n      <p> completedMeetings: {user.completedMeetings} </p>\r\n      <h2> Rate: {user.rate} </h2>\r\n      <button onClick={handleClick}>\r\nВсе пользователи\r\n      </button>\r\n    </div>;\r\n  } else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({\n  itemsCount,\n  pageSize,\n  onPageChange,\n  currentPage\n}) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  const pages = _.range(1, pagesCount + 1);\n  // создание массива из чисел\n  if (pagesCount === 1) return null;\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            className={\"page-item \" + (page === currentPage ? \"active\" : \"\")}\n            key={page}\n          >\n            <a className=\"page-link\"\n              role=\"button\"\n              onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (!Array.isArray(items)) {\n    return (\n      <ul className=\"list-group\">\n        {Object.keys(items).map((item) => (\n          <li key={items[item][valueProperty]}\n            className={\"list-group-item \" + (items[item] === selectedItem\n              ? \"active\"\n              : \"\")}\n            onClick={() => onItemSelect(items[item])}\n            role=\"button\">\n            {items[item][contentProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li key={item[valueProperty]}\n          className={\"list-group-item \" + (item === selectedItem\n            ? \"active\"\n            : \"\")}\n          onClick={() => onItemSelect(item)}\n          role=\"button\">\n          {item[contentProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\n\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction SearchStatus({ length }) {\n  const renderPhrase = (number) => {\n    const lastOne = Number(number.toString().slice(-1));\n    if (number > 4 && number < 15) return \"Человек тусанет\";\n    if ([2, 3, 4].indexOf(lastOne) >= 0) return \"Человека тусанут\";\n    if (lastOne === 1) return \"Человек тусанет\";\n    return \"Человек тусанет\";\n  };\n\n  return (\n    <h2>\n      <span className={\"badge bg-\" + (length > 0 ? \"primary\" : \"danger\")}>\n        {length > 0\n          ? `${length} ${renderPhrase(length)} с тобой сегодня`\n          : \"Никто с тобой не тусанет\"}\n      </span>\n    </h2>\n  );\n}\n\nSearchStatus.propTypes = {\n  length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Bookmark({ status, ...rest }) {\n  return (\n    <button {...rest}>\n      <i className={\"bi bi-bookmark\" + (status ? \"-fill\" : \"\")}> </i>\n    </button>\n  );\n}\n\nBookmark.propTypes = {\n  status: PropTypes.bool\n};\n\nexport default Bookmark;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ selectedSort, onSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) { // при выборе одного item\r\n      onSort({\r\n        ...selectedSort, // передаем в Онсорт новый объект\r\n        order: selectedSort.order === \"asc\" // с сортировкой по умолчанию\r\n          ? \"desc\" // и меняем, если сортир. была по asc при повторном нажатии на item\r\n          : \"asc\" // при последующем нажатии выбираем по умолчанию asc\r\n      });\r\n    } else {\r\n      onSort({ path: item, order: \"asc\" });// если меняем item на другой\r\n    }\r\n  };\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === \"asc\") {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th key={column} onClick={columns[column].path\r\n            ? () => handleSort(columns[column].path)\r\n            : undefined} // если есть св-во итер, то вешаем ф-ю обработчик события\r\n          {...{ role: columns[column].path && \"button\" }}\r\n          // если есть св-во итер, то добавляем роль кнопки\r\n          scope=\"col\">\r\n            {columns[column].name} {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n        {/* <th onClick={() => handleSort(\"name\")} scope=\"col\">Имя</th> */}\r\n        {/* <th scope=\"col\">Качества</th> */}\r\n        {/* <th onClick={() => handleSort(\"profession.name\")} scope=\"col\">Профессия</th> */}\r\n        {/* <th onClick={() => handleSort(\"completedMeetings\")} scope=\"col\">Встретился, раз</th> */}\r\n        {/* <th onClick={() => handleSort(\"rate\")} scope=\"col\">Оценка</th> */}\r\n        {/* <th onClick={() => handleSort(\"bookmark\")} scope=\"col\">Избранное</th> */}\r\n        {/* <th scope=\"col\">Удалить</th> */}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === \"function\") {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}> {renderContent(item, column)} </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({\r\n  selectedSort,\r\n  onSort,\r\n  columns,\r\n  data,\r\n  children\r\n}) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || <>\r\n        <TableHeader {...{ selectedSort, onSort, columns }}/>\r\n        <TableBody {...{ columns, data }} />\r\n      </>}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Bookmark from \"../common/bookmark\";\r\nimport Qualities from \"./qualities/\";\r\nimport Table from \"../common/table/\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserTable = ({\r\n  users,\r\n  onSort,\r\n  selectedSort,\r\n  onToggleBookMark,\r\n  onDelete,\r\n  ...rest\r\n}) => {\r\n  const columns = {\r\n    name: {\r\n      path: \"name\",\r\n      name: \"Имя\",\r\n      component: (user) => <Link to = {`/users/${user._id}`}> {user.name} </Link>\r\n    },\r\n    qualities: {\r\n      name: \"Качества\",\r\n      component: (user) => (<Qualities qualities={user.qualities}/>)\r\n    },\r\n    professions: { path: \"profession.name\", name: \"Профессия\" },\r\n    completedMeetings: { path: \"completedMeetings\", name: \"Встретился, раз\" },\r\n    rate: { path: \"rate\", name: \"Оценка\" },\r\n    bookmark: {\r\n      path: \"bookmark\",\r\n      name: \"Избранное\",\r\n      component: (user) => (\r\n        <Bookmark\r\n          status = {user.bookmark}\r\n          onClick = {() => onToggleBookMark(user._id)}\r\n        />)\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button\r\n          onClick={() => onDelete(user._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\ndelete\r\n        </button>\r\n      )\r\n    }\r\n  };\r\n  // динамические заголовки, path - путь к данным\r\n  return (\r\n    // <Table>\r\n  //     <TableHeader {...{ selectedSort, onSort, columns }}/>\r\n  //     <TableBody {...{ columns, data: users }} />\r\n  //   </ Table>\r\n    <Table\r\n      onSort={onSort}\r\n      selectedSort={selectedSort}\r\n      columns={columns}\r\n      data={users}\r\n    />\r\n\r\n  );\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\n\nimport Pagination from \"../../common/pagination\";\nimport { paginate } from \"../../../utils/paginate\";\nimport PropTypes from \"prop-types\";\nimport GroupList from \"../../common/groupList\";\nimport api from \"../../../api\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\n\nconst UsersListPage = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [professions, setProfession] = useState();\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n  // по умолчанию сортировка по имени и возрастанию\n  const [users, setUsers] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  // для поиска\n  useEffect(() => {\n    api.users.fetchAll().then((data) => setUsers(data));\n  }, []);\n\n  const handleDelete = (userId) => {\n    setUsers(\n      users.filter((user) => {\n        return user._id !== userId;\n      })\n    );\n  };\n\n  const handleToggleBookMark = (id) => {\n    setUsers(\n      users.map((user) => {\n        if (user._id === id) {\n          return {\n            ...user,\n            bookmark: !user.bookmark\n          };\n        }\n        return user;\n      })\n    );\n  };\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => setProfession(data));\n  }, []);\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchQuery]);\n  // переключение на 1-ую страницу после выбора определенной профессии в\n  // фильтре. Следим также и за поисковыми данными\n\n  const pageSize = 8;\n\n  const handleProfessionSelect = item => {\n    if (searchQuery !== \"\") setSearchQuery(\"\");\n    // при выборе профессии очищаем поиск\n    setSelectedProf(item);\n  };\n  const handleSearchQuery = ({ target }) => {\n    setSelectedProf(undefined); // сброс текущей фильтрации по профессии\n    setSearchQuery(target.value);\n  };\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n  const handleSort = (item) => {\n    setSortBy(item);\n  };\n  // при повторном нажатии на колонку (имя, профессия..) направление меняется\n  // на обратное и при выборе другой колонки - направление меняется на стандартное\n  // и также меняется параметр сортировки\n  if (users) {\n    const filteredUsers = searchQuery\n      ? users.filter((user) => user.name\n        .toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1)\n    // приоритетен поиск перед фильтрацией\n      : selectedProf\n        ? users.filter(\n          (user) =>\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf))\n      // т.к.первый является объектом, второй массивом, приводим к одному\n      // типу их значения - строке\n        : users;\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    // ф-я разбивки данных по страницам\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n\n    return (\n      <div className=\"d-flex\">\n        {professions && (\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n            <GroupList\n              selectedItem={selectedProf}\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n              valueProperty=\"_id\"\n              contentProperty=\"name\"\n            />\n            <button\n              className=\"btn btn-secondary mt-2\"\n              onClick={clearFilter}\n            >\n              {\" \"}\n              Очистить\n            </button>\n          </div>\n        )}\n        <div className=\"d-flex flex-column\">\n          <SearchStatus length={count}/>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            placeholder=\"Search...\"\n            onChange={handleSearchQuery}\n            value={searchQuery}\n          />\n          {count > 0 && (\n            <UserTable\n              users={usersCrop}\n              onSort={handleSort}\n              selectedSort={sortBy}\n              onDelete={handleDelete}\n              onToggleBookMark={handleToggleBookMark}\n            />\n          )}\n          <div className=\"d-flex justify-content-center\">\n            <Pagination\n              itemsCount={count}\n              currentPage={currentPage}\n              pageSize={pageSize}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"loading...\";\n};\n\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n/*\nitems - создаем новый массив,\npageNumber - номер страницы (currentPage(1)),\npageSize - размер страниц (2);\nstartIndex - начальный индекс элементов, чтоб разбить данные на страницы (0);\n.slice - забрать элементы для текущей страницы - отрежет массив, начиная со\nstartIndex;\n.take() - заберет нужные элементы для страницы из pageSize;\nvalue() - из lodash массива возвращает обычный массив.\n */\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserPage from \"../components/page/userPage/\";\r\nimport UsersListPage from \"../components/page/usersListPage/\";\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId } = params;\r\n  return (\r\n    <>\r\n      {userId\r\n        ? <UserPage\r\n          userId={userId}/>\r\n        : <UsersListPage/>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul className=\"nav\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n         Main\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/users\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport Users from \"./layouts/users\";\nimport NavBar from \"./components/ui/navBar\";\n\nfunction App() {\n  return (\n    <div>\n    <NavBar />\n    <Switch>\n      <Route path=\"/users/:userId?\" component={Users}/>\n      <Route path=\"/login/:type?\" component={Login} />\n      <Route path=\"/\" exact component={Main}/>\n      <Redirect to=\"/\" />\n    </Switch>\n  </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}