{"version":3,"sources":["app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/layouts/users.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","CheckBoxField","children","checked","LoginForm","email","password","stayOn","setData","setErrors","handleChange","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","useEffect","Object","keys","isValid","onSubmit","e","preventDefault","console","log","disabled","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","SelectField","defaultOption","options","optionsArray","Array","isArray","map","optionName","option","RadioField","MultiSelectField","defaultValueToArray","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","RegisterForm","license","setQualities","setProfession","api","then","Login","useParams","formType","setFormType","toggleFormType","params","role","Main","UserCard","history","useHistory","location","pathname","src","substring","width","Quality","Qualities","qual","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","Comment","created","onRemove","setUser","isLoading","setIsLoading","alt","height","CommentsList","comment","TextAreaField","initialData","AddCommentForm","setUsers","validatorConfog","arrayOfUsers","Comments","setComments","sortedComments","orderBy","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","slice","indexOf","renderPhrase","Bookmark","status","rest","TableHeader","selectedSort","onSort","columns","renderSortArrow","currentPath","path","order","column","undefined","scope","TableBody","renderContent","component","get","Table","UserTable","onToggleBookMark","onDelete","to","delete","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","pageIndex","EditUserPage","getProfessionById","prof","profData","getQualities","elements","qualitiesQrray","elem","qualy","values","Users","edit","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.316b617d.chunk.js","sourcesContent":["export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n    switch (validateMethod) {\r\n    case \"isRequired\": {\r\n      if (typeof data === \"boolean\") {\r\n        statusValidate = !data;\r\n      } else {\r\n      statusValidate = data.trim() === \"\";\r\n    }\r\n      break;\r\n    }\r\n    case \"isEmail\": {\r\n      const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n      statusValidate = !emailRegExp.test(data);\r\n      break;\r\n    }\r\n    case \"isCapitalSymbol\": {\r\n      const capitalRegExp = /[A-Z]+/g;\r\n      statusValidate = !capitalRegExp.test(data);\r\n      break;\r\n    }\r\n    case \"isContainDigit\": {\r\n      const digitRegExp = /\\d+/g;\r\n      statusValidate = !digitRegExp.test(data);\r\n      break;\r\n    }\r\n    case \"min\": {\r\n      statusValidate = data.length < config.value;\r\n      break;\r\n    }\r\n    // default:\r\n    //   break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      );\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({\r\n  label,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n  }; // класс вывода ошибки\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}> {label} </label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          type={showPassword ? \"text\" : type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === \"password\" && (\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            onClick={toggleShowPassword}\r\n          >\r\n            <i\r\n              className={\"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")}> </i>\r\n          </button>\r\n        )}\r\n        {/* && - т.к.нет негативного отображения */}\r\n        {error && <div className=\"invalid-feedback\"> {error} </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: \"text\"\r\n}; // т.е.если тип не задан, то по умолчанию это текст.\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({\r\n  name,\r\n  value,\r\n  onChange,\r\n  children,\r\n  error\r\n}) => {\r\n  const handleChange = () => {\r\nonChange({ name: name, value: !value });\r\n  };\r\n  const getInputClasses = () => {\r\n    return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n  };\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label\r\n        className=\"form-check-label\"\r\n        htmlFor={name}\r\n      >\r\n        {children}\r\n      </label>\r\n      { error && <div\r\n      className=\"invalid-feedback\">\r\n        {error}\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\n\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    stayOn: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }));\r\n  };\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: \"Электронная почта обязательна для заполнения\"\r\n      },\r\n      isEmail: {\r\n        message: \"Email введен некорректно\"\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: {\r\n        message: \"Пароль обязателен для заполнения\"\r\n      },\r\n      isCapitalSymbol: {\r\n        message: `Пароль должен содержать хотя\r\n        бы одну заглавную букву`\r\n      },\r\n      isContainDigit: {\r\n        message: \"Пароль должен содержать хотя бы одно число\"\r\n      },\r\n      min: {\r\n        message: \"Пароль должен состоять минимум из 8 символов\",\r\n        value: 8\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n  // следим за вводом текста в поля до отправки формы\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n  // для добавления исключения при деактивации баттон\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n  return (\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Электронная почта\"\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              error={errors.email}\r\n            />\r\n            <TextField\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={data.password}\r\n              onChange={handleChange}\r\n              error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n              value={data.stayOn}\r\n              onChange={handleChange}\r\n              name=\"stayOn\"\r\n            >\r\n              Оставаться в системе\r\n            </CheckBoxField>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!isValid}\r\n              className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"johndorian@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"koks@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bobkelso@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"rachelgreene@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"sheldoncooper@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"leonardhofstedter@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"howardwolowitz@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"nikolatesla@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"monicageller@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatouille@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joeytribbiani@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"bradpitt@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  defaultOption,\r\n  options,\r\n  name,\r\n  error\r\n}) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n   const getInputClasses = () => {\r\n    return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n  };\r\n  const optionsArray = !Array.isArray(options) &&\r\n  typeof options === \"object\"\r\n? Object.keys(options).map((optionName) => ({\r\n      name: options[optionName].name,\r\n      value: options[optionName]._id\r\n}))\r\n: options;\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n        htmlFor={name}\r\n        className=\"form-label\"\r\n      >\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option\r\n              value={option.value}\r\n              key={option.value}\r\n            >\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({\r\n  options,\r\n  name,\r\n  onChange,\r\n  value,\r\n  label\r\n}) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n       className=\"form-label\"\r\n      >\r\n        {label}\r\n      </label>\r\n      <div>\r\n      {options.map((option) => (\r\n        <div\r\n          key={option.name + \"_\" + option.value}\r\n          className=\"form-check form-check-inline\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name={name}\r\n            id={option.name + \"_\" + option.value}\r\n            checked={option.value === value}\r\n            value={option.value}\r\n            onChange={handleChange}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={option.name + \"_\" + option.value}>\r\n            {option.name}\r\n          </label>\r\n        </div>\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({\r\n  options,\r\n  onChange,\r\n  name,\r\n  label,\r\n  defaultValue\r\n}) => {\r\n  const defaultValueToArray = defaultValue.map((value) => ({\r\n    label: value.name,\r\n    value: value._id\r\n  }));\r\n  const optionsArray =\r\n    !Array.isArray(options) &&\r\n  typeof options === \"object\"\r\n    ? Object.keys(options).map((optionName) => ({\r\n      label: options[optionName].name,\r\n      value: options[optionName]._id\r\n    }))\r\n    : options;\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n        className=\"form-label\"\r\n      >\r\n        {label}\r\n      </label>\r\n    <Select\r\n      isMulti\r\n      closeMenuOnSelect={false}\r\n      // чтоб вкладка автоматически не закрывалась после выбора\r\n      defaultValue={defaultValueToArray}\r\n      options={optionsArray}\r\n      className=\"basic-multi-select\"\r\n      classNamePrefix=\"select\"\r\n      onChange={handleChange}\r\n      name={name}\r\n    />\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  onChange: PropTypes.func,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport api from \"../../api\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport MultiSelectField from \"../common/form/multiSelectField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\n\r\nconst RegisterForm = () => {\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    profession: \"\",\r\n    sex: \"male\",\r\n    qualities: [],\r\n    license: false\r\n  });\r\n\r\n  const [qualities, setQualities] = useState({});\r\n  const [professions, setProfession] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => setProfession(data));\r\n    api.qualities.fetchAll().then((data) => setQualities(data));\r\n  }, []);\r\n\r\n  const handleChange = (target) => {\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        [target.name]: target.value\r\n      }));\r\n  };\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: \"Электронная почта обязательна для заполнения\"\r\n      },\r\n      isEmail: {\r\n        message: \"Email введен некорректно\"\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: {\r\n        message: \"Пароль обязателен для заполнения\"\r\n      },\r\n      isCapitalSymbol: {\r\n        message: `Пароль должен содержать хотя \r\n        бы одну заглавную букву`\r\n      },\r\n      isContainDigit: {\r\n        message: \"Пароль должен содержать хотя бы одно число\"\r\n      },\r\n      min: {\r\n        message: \"Пароль должен состоять минимум из 8 символов\",\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: {\r\n        message: \"Обязательно выберите Вашу профессию\"\r\n      }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message:\r\n        \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n  // следим за вводом текста в поля до отправки формы\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n  // для добавления исключения при деактивации баттон\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        name=\"email\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите профессию\"\r\n        defaultOption=\"Choose...\"\r\n        name=\"profession\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n        value={data.profession}\r\n        error={errors.profession}\r\n      />\r\n      <RadioField\r\n        options={[{ name: \"Male\", value: \"male\" },\r\n          { name: \"Female\", value: \"female\" },\r\n          { name: \"Other\", value: \"other\" }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualities}\r\n        onChange={handleChange}\r\n        defaultValue={data.qualities}\r\n        name=\"qualities\"\r\n        label=\"Выберите качества\"\r\n      />\r\n      <CheckBoxField\r\n      value={data.license}\r\n      onChange={handleChange}\r\n      name=\"license\"\r\n      error={errors.license}\r\n      >\r\n        Подтвердить <a> лицензионное соглашение </a>\r\n      </CheckBoxField>\r\n      <button\r\n        type=\"submit\"\r\n        disabled={!isValid}\r\n        className=\"btn btn-primary w-100 mx-auto\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from \"react\";\r\nimport LoginForm from \"../components/ui/loginForm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RegisterForm from \"../components/ui/registerForm\";\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === \"register\" ? type : \"login\");\r\nconst toggleFormType = (params) => {\r\n  setFormType(prevState => prevState === \"register\" ? \"login\" : \"register\");\r\n};\r\n\r\nreturn (\r\n  <div className=\"container mt-5\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n        {formType === \"register\"\r\n? (\r\n            <>\r\n              <h3 className=\"mb-4\"> Register </h3>\r\n              <RegisterForm/>\r\n            <p> Already have account?{\" \"}\r\n              <a\r\n                role=\"button\"\r\n                onClick={toggleFormType}>\r\n                {\" \"}\r\n                Sign in\r\n              </a>\r\n            </p>\r\n          </>\r\n          )\r\n: (\r\n            <>\r\n              <h3 className=\"mb-4\"> Login </h3>\r\n              <LoginForm />\r\n            <p> {`Don't`} have account?{\" \"}\r\n              <a\r\n              role=\"button\"\r\n              onClick={toggleFormType}\r\n              >\r\n                {\" \"}\r\n                Sign up </a>\r\n            </p>\r\n        </>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n      );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <h1> Main Page </h1>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n        // перенаправляем пользователя на страницу изменений\n        // к текущей странице добавляем\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                <button\n                    className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                    onClick={handleClick}\n                >\n                    <i className=\"bi bi-gear\"></i>\n                </button>\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\n                            Math.random() + 1\n                        )\n                            .toString(36)\n                            .substring(7)}.svg`}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Quality({ color, name, _id }) {\n  return (\n    <span className={`badge m-1 bg-${color}`} key={_id}>\n      {name}\n    </span>\n  );\n}\n\nQuality.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\r\nexport default Qualities;\r\n","import React from \"react\";\r\nimport Quality from \"./quality\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  return <>\r\n    {qualities.map((qual) => (\r\n      <Quality key={qual._id} {...qual} />\r\n    ))}\r\n  </>;\r\n};\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDay() - date.getDay();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport API from \"../../../api\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const [user, setUser] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        API.users.getById(userId).then((data) => {\n            setUser(data);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                {isLoading\n                 ? (\n                    \"Loading ...\"\n                  )\n                 : (\n     <div className=\"col\">\n     <div className=\"d-flex flex-start \">\n        <img\n            src={`https://avatars.dicebear.com/api/avataaars/${(\n               Math.random() + 1\n                   )\n               .toString(36)\n                .substring(7)}.svg`}\n               className=\"rounded-circle shadow-1-strong me-3\"\n              alt=\"avatar\"\n             width=\"65\"\n               height=\"65\"\n        />\n         <div className=\"flex-grow-1 flex-shrink-1\">\n             <div className=\"mb-4\">\n                 <div className=\"d-flex justify-content-between align-items-center\">\n                     <p className=\"mb-1 \">\n                         {user && user.name}{\" \"}\n                         <span className=\"small\">\n                             - {displayDate(created)}\n                         </span>\n                     </p>\n                     <button\n                       className=\"btn btn-sm text-primary d-flex align-items-center\"\n                       onClick={() => onRemove(id)}\n                     >\n                         <i className=\"bi bi-x-lg\"></i>\n                     </button>\n                 </div>\n                 <p className=\"small mb-0\">{content}</p>\n             </div>\n         </div>\n     </div>\n     </div>\n                  )}\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment\n          key={comment._id}\n          {...comment}\n          onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../../../api\";\nimport SelectField from \"../form/selectField\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nconst initialData = { userId: \"\", content: \"\" };\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState(initialData);\n    const [users, setUsers] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        userId: {\n            isRequired: {\n                message: \"Выберите от чьего имени вы хотите отправить сообщение\"\n            }\n        },\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    useEffect(() => {\n        API.users.fetchAll().then(setUsers);\n    }, []);\n    const clearForm = () => {\n        setData(initialData);\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    const arrayOfUsers =\n        users &&\n        Object.keys(users).map((userId) => ({\n            name: users[userId].name,\n            value: users[userId]._id\n        }));\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <SelectField\n                    onChange={handleChange}\n                    options={arrayOfUsers}\n                    name=\"userId\"\n                    value={data.userId}\n                    defaultOption=\"Выберите пользователя\"\n                    error={errors.userId}\n                />\n                <TextAreaField\n                    value={data.content}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import { orderBy } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { useParams } from \"react-router\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const [comments, setComments] = useState([]);\n    useEffect(() => {\n        api.comments\n            .fetchCommentsForUser(userId)\n            .then((data) => setComments(data));\n    }, []);\n    const handleSubmit = (data) => {\n        api.comments\n            .add({ ...data, pageId: userId })\n          // на какой странице должен отображаться комментарий\n            .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        api.comments.remove(id).then((id) => {\n            setComments(comments.filter((x) => x._id !== id));\n        });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../../api\";\r\nimport UserCard from \"../../ui/userCard\";\r\nimport QualitiesCard from \"../../ui/qualitiesCard\";\r\nimport MeetingsCard from \"../../ui/meetingsCard\";\r\nimport Comments from \"../../ui/comments\";\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    api.users.getById(userId).then((data) => setUser(data));\r\n  }, []);\r\n  // ставим пустой массив как зависимость, чтоб юзеры\r\n  // запрашивались 1 раз при загрузке страницы, а не\r\n  // каждый раз при изменении страницы\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <UserCard user={user} />\r\n            <QualitiesCard data={user.qualities} />\r\n            <MeetingsCard value={user.completedMeetings} />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <Comments />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({\n  itemsCount,\n  pageSize,\n  onPageChange,\n  currentPage\n}) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  const pages = _.range(1, pagesCount + 1);\n  // создание массива из чисел\n  if (pagesCount === 1) return null;\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            className={\"page-item \" + (page === currentPage ? \"active\" : \"\")}\n            key={page}\n          >\n            <a className=\"page-link\"\n              role=\"button\"\n              onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (!Array.isArray(items)) {\n    return (\n      <ul className=\"list-group\">\n        {Object.keys(items).map((item) => (\n          <li key={items[item][valueProperty]}\n            className={\"list-group-item \" + (items[item] === selectedItem\n              ? \"active\"\n              : \"\")}\n            onClick={() => onItemSelect(items[item])}\n            role=\"button\">\n            {items[item][contentProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li key={item[valueProperty]}\n          className={\"list-group-item \" + (item === selectedItem\n            ? \"active\"\n            : \"\")}\n          onClick={() => onItemSelect(item)}\n          role=\"button\">\n          {item[contentProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\n\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction SearchStatus({ length }) {\n  const renderPhrase = (number) => {\n    const lastOne = Number(number.toString().slice(-1));\n    if (number > 4 && number < 15) return \"Человек тусанет\";\n    if ([2, 3, 4].indexOf(lastOne) >= 0) return \"Человека тусанут\";\n    if (lastOne === 1) return \"Человек тусанет\";\n    return \"Человек тусанет\";\n  };\n\n  return (\n    <h2>\n      <span className={\"badge bg-\" + (length > 0 ? \"primary\" : \"danger\")}>\n        {length > 0\n          ? `${length} ${renderPhrase(length)} с тобой сегодня`\n          : \"Никто с тобой не тусанет\"}\n      </span>\n    </h2>\n  );\n}\n\nSearchStatus.propTypes = {\n  length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Bookmark({ status, ...rest }) {\n  return (\n    <button {...rest}>\n      <i className={\"bi bi-bookmark\" + (status ? \"-fill\" : \"\")}> </i>\n    </button>\n  );\n}\n\nBookmark.propTypes = {\n  status: PropTypes.bool\n};\n\nexport default Bookmark;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ selectedSort, onSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) { // при выборе одного item\r\n      onSort({\r\n        ...selectedSort, // передаем в Онсорт новый объект\r\n        order: selectedSort.order === \"asc\" // с сортировкой по умолчанию\r\n          ? \"desc\" // и меняем, если сортир. была по asc при повторном нажатии на item\r\n          : \"asc\" // при последующем нажатии выбираем по умолчанию asc\r\n      });\r\n    } else {\r\n      onSort({ path: item, order: \"asc\" });// если меняем item на другой\r\n    }\r\n  };\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === \"asc\") {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th key={column} onClick={columns[column].path\r\n            ? () => handleSort(columns[column].path)\r\n            : undefined} // если есть св-во итер, то вешаем ф-ю обработчик события\r\n          {...{ role: columns[column].path && \"button\" }}\r\n          // если есть св-во итер, то добавляем роль кнопки\r\n          scope=\"col\">\r\n            {columns[column].name} {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n        {/* <th onClick={() => handleSort(\"name\")} scope=\"col\">Имя</th> */}\r\n        {/* <th scope=\"col\">Качества</th> */}\r\n        {/* <th onClick={() => handleSort(\"profession.name\")} scope=\"col\">Профессия</th> */}\r\n        {/* <th onClick={() => handleSort(\"completedMeetings\")} scope=\"col\">Встретился, раз</th> */}\r\n        {/* <th onClick={() => handleSort(\"rate\")} scope=\"col\">Оценка</th> */}\r\n        {/* <th onClick={() => handleSort(\"bookmark\")} scope=\"col\">Избранное</th> */}\r\n        {/* <th scope=\"col\">Удалить</th> */}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === \"function\") {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}> {renderContent(item, column)} </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({\r\n  selectedSort,\r\n  onSort,\r\n  columns,\r\n  data,\r\n  children\r\n}) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || <>\r\n        <TableHeader {...{ selectedSort, onSort, columns }}/>\r\n        <TableBody {...{ columns, data }} />\r\n      </>}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Bookmark from \"../common/bookmark\";\r\nimport Qualities from \"./qualities/\";\r\nimport Table from \"../common/table/\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserTable = ({\r\n  users,\r\n  onSort,\r\n  selectedSort,\r\n  onToggleBookMark,\r\n  onDelete,\r\n  ...rest\r\n}) => {\r\n  const columns = {\r\n    name: {\r\n      path: \"name\",\r\n      name: \"Имя\",\r\n      component: (user) => <Link to = {`/users/${user._id}`}> {user.name} </Link>\r\n    },\r\n    qualities: {\r\n      name: \"Качества\",\r\n      component: (user) => (<Qualities qualities={user.qualities}/>)\r\n    },\r\n    professions: { path: \"profession.name\", name: \"Профессия\" },\r\n    completedMeetings: { path: \"completedMeetings\", name: \"Встретился, раз\" },\r\n    rate: { path: \"rate\", name: \"Оценка\" },\r\n    bookmark: {\r\n      path: \"bookmark\",\r\n      name: \"Избранное\",\r\n      component: (user) => (\r\n        <Bookmark\r\n          status = {user.bookmark}\r\n          onClick = {() => onToggleBookMark(user._id)}\r\n        />)\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button\r\n          onClick={() => onDelete(user._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\ndelete\r\n        </button>\r\n      )\r\n    }\r\n  };\r\n  // динамические заголовки, path - путь к данным\r\n  return (\r\n    // <Table>\r\n  //     <TableHeader {...{ selectedSort, onSort, columns }}/>\r\n  //     <TableBody {...{ columns, data: users }} />\r\n  //   </ Table>\r\n    <Table\r\n      onSort={onSort}\r\n      selectedSort={selectedSort}\r\n      columns={columns}\r\n      data={users}\r\n    />\r\n\r\n  );\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\n\nimport Pagination from \"../../common/pagination\";\nimport { paginate } from \"../../../utils/paginate\";\nimport PropTypes from \"prop-types\";\nimport GroupList from \"../../common/groupList\";\nimport api from \"../../../api\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\n\nconst UsersListPage = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [professions, setProfession] = useState();\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n  // по умолчанию сортировка по имени и возрастанию\n  const [users, setUsers] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  // для поиска\n  useEffect(() => {\n    api.users.fetchAll().then((data) => setUsers(data));\n  }, []);\n\n  const handleDelete = (userId) => {\n    setUsers(\n      users.filter((user) => {\n        return user._id !== userId;\n      })\n    );\n  };\n\n  const handleToggleBookMark = (id) => {\n    setUsers(\n      users.map((user) => {\n        if (user._id === id) {\n          return {\n            ...user,\n            bookmark: !user.bookmark\n          };\n        }\n        return user;\n      })\n    );\n  };\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => setProfession(data));\n  }, []);\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchQuery]);\n  // переключение на 1-ую страницу после выбора определенной профессии в\n  // фильтре. Следим также и за поисковыми данными\n\n  const pageSize = 8;\n\n  const handleProfessionSelect = item => {\n    if (searchQuery !== \"\") setSearchQuery(\"\");\n    // при выборе профессии очищаем поиск\n    setSelectedProf(item);\n  };\n  const handleSearchQuery = ({ target }) => {\n    setSelectedProf(undefined); // сброс текущей фильтрации по профессии\n    setSearchQuery(target.value);\n  };\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n  const handleSort = (item) => {\n    setSortBy(item);\n  };\n  // при повторном нажатии на колонку (имя, профессия..) направление меняется\n  // на обратное и при выборе другой колонки - направление меняется на стандартное\n  // и также меняется параметр сортировки\n  if (users) {\n    const filteredUsers = searchQuery\n      ? users.filter((user) => user.name\n        .toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1)\n    // приоритетен поиск перед фильтрацией\n      : selectedProf\n        ? users.filter(\n          (user) =>\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf))\n      // т.к.первый является объектом, второй массивом, приводим к одному\n      // типу их значения - строке\n        : users;\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    // ф-я разбивки данных по страницам\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n\n    return (\n      <div className=\"d-flex\">\n        {professions && (\n          <div className=\"d-flex flex-column\n          flex-shrink-0 p-3\">\n            <GroupList\n              selectedItem={selectedProf}\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n              valueProperty=\"_id\"\n              contentProperty=\"name\"\n            />\n            <button\n              className=\"btn btn-secondary mt-2\"\n              onClick={clearFilter}\n            >\n              {\" \"}\n              Очистить\n            </button>\n          </div>\n        )}\n        <div className=\"d-flex flex-column\">\n          <SearchStatus length={count}/>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            placeholder=\"Search...\"\n            onChange={handleSearchQuery}\n            value={searchQuery}\n          />\n          {count > 0 && (\n            <UserTable\n              users={usersCrop}\n              onSort={handleSort}\n              selectedSort={sortBy}\n              onDelete={handleDelete}\n              onToggleBookMark={handleToggleBookMark}\n            />\n          )}\n          <div className=\"d-flex justify-content-center\">\n            <Pagination\n              itemsCount={count}\n              currentPage={currentPage}\n              pageSize={pageSize}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"loading...\";\n};\n\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n/*\nitems - создаем новый массив,\npageNumber - номер страницы (currentPage(1)),\npageSize - размер страниц (2);\nstartIndex - начальный индекс элементов, чтоб разбить данные на страницы (0);\n.slice - забрать элементы для текущей страницы - отрежет массив, начиная со\nstartIndex;\n.take() - заберет нужные элементы для страницы из pageSize;\nvalue() - из lodash массива возвращает обычный массив.\n */\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: []\n    });\n    const [professions, setProfession] = useState([]);\n    const [qualities, setQualities] = useState({});\n    const [errors, setErrors] = useState({});\n    const getProfessionById = (id) => {\n        for (const prof in professions) {\n            const profData = professions[prof];\n            if (profData._id === id) return profData;\n        }\n    };// если айди профессии совпадает с нашим,\n    // возвращаем сам объект\n    const getQualities = (elements) => {\n        const qualitiesQrray = [];\n        for (const elem of elements) {\n            for (const qualy in qualities) {\n                if (elem.value === qualities[qualy]._id) {\n                    qualitiesQrray.push(qualities[qualy]);\n                }\n            }\n        }\n        return qualitiesQrray;\n    }; // проходимся по элементам в поле,\n    // сравниваем их с данными api и при совпадении\n    // добавляем их в массив и возвращаем массив элементов\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        api.users\n            .update(userId, {\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            })\n            .then((data) => history.push(`/users/${data._id}`));\n        // после получения данных переадресовываем пользователя\n        console.log(data);\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        api.users.getById(userId).then(({ profession, ...data }) =>\n            setData((prevState) => ({\n                ...prevState,\n                ...data,\n                profession: profession._id\n            }))\n        );\n        api.qualities.fetchAll().then((data) => setQualities(data));\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n    useEffect(() => {\n        if (data._id) setIsLoading(false);\n    }, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0\n? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выберите свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professions}\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualities}\n                                onChange={handleChange}\n                                values\n                                name=\"qualities\"\n                                label=\"Выберите ваши качества\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    )\n: (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserPage from \"../components/page/userPage/\";\r\nimport UsersListPage from \"../components/page/usersListPage/\";\r\nimport EditUserPage from \"../components/page/editUserPage\";\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId, edit } = params;\r\n  return (\r\n    <>\r\n      {userId\r\n        ? (edit\r\n? (\r\n            <EditUserPage />\r\n          )\r\n: (<UserPage\r\n            userId={userId}/>\r\n          ))\r\n        : (\r\n          <UsersListPage/>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul className=\"nav\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n         Main\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/users\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport Users from \"./layouts/users\";\nimport NavBar from \"./components/ui/navBar\";\n\nfunction App() {\n  return (\n    <div>\n    <NavBar />\n    <Switch>\n      <Route path=\"/users/:userId?/:edit?\" component={Users}/>\n      <Route path=\"/login/:type?\" component={Login} />\n      <Route path=\"/\" exact component={Main}/>\n      <Redirect to=\"/\" />\n    </Switch>\n  </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}